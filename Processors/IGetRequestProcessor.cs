using System;
using System.Threading.Tasks;

namespace RemoteKeyStorage.Processors
{
	/// <summary>
	/// Контракт обработчика GET-запросов
	/// Для обработки используется асинхронный метод для повышения производительности
	/// В нашем случае это не имеет особого значения, т.к. реализация хранилища
	/// базируется на использовании In-memory данных и  не происходит длительного обращения
	/// к внешнему хранилищу данных и следовательно блокировки потока веб-реквеста,
	/// но в общем случае нужно избегать синхронных запросов для обеспечения лучшей пропускной способности
	/// </summary>
	public interface IGetRequestProcessor
	{
		/// <summary>
		/// Для каждого типа обработчика мы указываем роут, в общем случае
		/// за роутинг также должен отвечать собственный, декларативно кастомизируемый middleware, т.е. собственная абстракция.
		/// Обработчик запроса только оркестрирует вызов доменных сервисов, связанных с определенным Bounded Context
		/// </summary>
		string ProvideGetRoute();
		Func<dynamic, Task<object>> ProvideGetItemAction();
	}
}